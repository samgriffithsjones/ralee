%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.7
%%CreationDate: Tue Aug  5 10:24:24 2014
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UGCCUUAAACUUAUGAGUAAGGAAAAUAACGAUUCGGGGUGACGCCCGAAUCCUCACUGCUAAUGUGAGACGAAUUUUUGAGCGGGUAAAGGUCGCCCUCAAGGUGACCCGCCUACUUUGCGGGAUGCC\
) def
/coor [
[88.22409058 152.96842957]
[81.79575348 151.11685181]
[75.64410400 148.48832703]
[67.12313080 160.83308411]
[58.60216141 173.17784119]
[50.08119202 185.52259827]
[41.56021881 197.86735535]
[44.20192719 213.21855164]
[35.38459396 225.61650085]
[20.73329735 228.04035950]
[19.95376205 244.42097473]
[5.25595808 251.69467163]
[-8.24027538 242.37889099]
[-6.65117025 226.05691528]
[8.38853931 219.51939392]
[5.45946455 204.96067810]
[13.92508507 192.31996155]
[29.21546173 189.34638977]
[37.73643494 177.00163269]
[46.25740433 164.65687561]
[54.77837753 152.31211853]
[63.29934692 139.96736145]
[57.33847046 134.22297668]
[52.27857590 127.58885193]
[48.25249863 120.20661163]
[45.37077713 112.23768616]
[43.71868134 103.85984039]
[43.35381317 95.26316833]
[44.30434036 86.64578247]
[46.56789017 78.20928192]
[50.11115265 70.15402222]
[36.50803757 63.83300400]
[22.90492058 57.51198578]
[9.30180645 51.19097137]
[-4.30130959 44.86995316]
[-17.90442467 38.54893875]
[-31.50753975 32.22792053]
[-45.11065674 25.90690422]
[-59.86665344 31.56694221]
[-74.26876831 25.05890274]
[-79.77248383 10.24388695]
[-73.11254120 -4.08861732]
[-58.24016190 -9.43539047]
[-43.97887421 -2.62428570]
[-38.78963852 12.30378819]
[-25.18652344 18.62480545]
[-11.58340836 24.94582176]
[2.01970720 31.26683807]
[15.62282276 37.58785629]
[29.22593880 43.90887070]
[42.82905197 50.22988892]
[56.43216705 56.55090332]
[68.23992157 47.30012131]
[65.35801697 32.57957077]
[62.47612000 17.85901833]
[59.59421921 3.13846612]
[56.71231842 -11.58208561]
[42.93862534 -18.98609734]
[37.19462204 -33.53052902]
[42.19245148 -48.34793854]
[55.57228851 -56.44200516]
[71.01658630 -53.99095535]
[81.23302460 -42.15209961]
[81.39769745 -26.51538277]
[71.43286896 -14.46398640]
[74.31477356 0.25656533]
[77.19667053 14.97711754]
[80.07857513 29.69766998]
[82.96047211 44.41822052]
[92.30068970 42.73235703]
[101.73325348 42.59539413]
[111.00459290 43.99222946]
[119.86853790 46.86677933]
[128.09281921 51.12397766]
[135.46522522 56.63280869]
[141.79896545 63.23028183]
[146.93748474 70.72618103]
[150.75827026 78.90856934]
[153.17570496 87.54969788]
[154.14292908 96.41240692]
[169.10353088 97.49893188]
[184.06411743 98.58544922]
[198.38848877 91.86808777]
[210.52188110 100.50696564]
[225.48248291 101.59348297]
[240.44306946 102.68000793]
[255.40367126 103.76652527]
[263.30572510 96.10771179]
[273.91192627 94.15940857]
[283.61416626 98.33551788]
[289.24871826 107.00778198]
[304.13937378 108.81583405]
[319.02999878 110.62388611]
[333.92062378 112.43193054]
[348.81124878 114.23998260]
[363.70190430 116.04803467]
[378.59252930 117.85608673]
[392.05728149 109.13372040]
[407.22552490 114.35902405]
[412.46148682 129.52360535]
[403.74856567 142.99447632]
[387.77056885 144.43795776]
[376.78448486 132.74671936]
[361.89382935 130.93865967]
[347.00320435 129.13061523]
[332.11257935 127.32256317]
[317.22195435 125.51451874]
[302.33129883 123.70646667]
[287.44067383 121.89841461]
[270.35641479 130.82676697]
[254.31715393 118.72712708]
[239.35655212 117.64060211]
[224.39595032 116.55408478]
[209.43536377 115.46755981]
[196.18107605 122.26263428]
[182.97760010 113.54605103]
[168.01699829 112.45952606]
[153.05641174 111.37300873]
[142.30642700 133.97784424]
[122.55380249 149.35234070]
[126.84298706 163.72602844]
[140.21693420 172.58700562]
[141.48406982 188.57994080]
[129.67236328 199.43641663]
[113.84272766 196.82826233]
[106.13832092 182.75625610]
[112.46929932 168.01521301]
[108.18011475 153.64152527]
[101.51729584 154.24043274]
] def
/pairs [
[3 22]
[4 21]
[5 20]
[6 19]
[7 18]
[10 15]
[31 52]
[32 51]
[33 50]
[34 49]
[35 48]
[36 47]
[37 46]
[38 45]
[53 69]
[54 68]
[55 67]
[56 66]
[57 65]
[80 118]
[81 117]
[82 116]
[84 114]
[85 113]
[86 112]
[87 111]
[91 109]
[92 108]
[93 107]
[94 106]
[95 105]
[96 104]
[97 103]
[120 128]
[121 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
